aes_                  package:ggplot2                  R Documentation

_D_e_f_i_n_e _a_e_s_t_h_e_t_i_c _m_a_p_p_i_n_g_s _p_r_o_g_r_a_m_m_a_t_i_c_a_l_l_y

_D_e_s_c_r_i_p_t_i_o_n:

     Aesthetic mappings describe how variables in the data are mapped
     to visual properties (aesthetics) of geoms. ‘aes()’ uses
     non-standard evaluation to capture the variable names. ‘aes_’ and
     ‘aes_string’ require you to explicitly quote the inputs either
     with ‘""’ for ‘aes_string()’, or with ‘quote’ or ‘~’ for ‘aes_()’.
     (‘aes_q’ is an alias to ‘aes_’). This makes ‘aes_’ and
     ‘aes_string’ easy to program with.

_U_s_a_g_e:

     aes_(x, y, ...)
     
     aes_string(x, y, ...)
     
     aes_q(x, y, ...)
     
_A_r_g_u_m_e_n_t_s:

x, y, ...: List of name value pairs. Elements must be either quoted
          calls, strings, one-sided formulas or constants.

_D_e_t_a_i_l_s:

     ‘aes_string’ and ‘aes_’ are particularly useful when writing
     functions that create plots because you can use strings or quoted
     names/calls to define the aesthetic mappings, rather than having
     to use ‘substitute()’ to generate a call to ‘aes()’.

     I recommend using ‘aes_()’, because creating the equivalents of
     ‘aes(colour = "my colour")’ or ‘aes{x = `X$1`}’ with
     ‘aes_string()’ is quite clunky.

_L_i_f_e _c_y_c_l_e:

     All these functions are soft-deprecated. Please use tidy
     evaluation idioms instead (see the quasiquotation section in
     ‘aes()’ documentation).

_S_e_e _A_l_s_o:

     ‘aes()’

_E_x_a_m_p_l_e_s:

     # Three ways of generating the same aesthetics
     aes(mpg, wt, col = cyl)
     aes_(quote(mpg), quote(wt), col = quote(cyl))
     aes_(~mpg, ~wt, col = ~cyl)
     aes_string("mpg", "wt", col = "cyl")
     
     # You can't easily mimic these calls with aes_string
     aes(`$100`, colour = "smooth")
     aes_(~ `$100`, colour = "smooth")
     # Ok, you can, but it requires a _lot_ of quotes
     aes_string("`$100`", colour = '"smooth"')
     
     # Convert strings to names with as.name
     var <- "cyl"
     aes(col = x)
     aes_(col = as.name(var))
     

