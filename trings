na_if                  package:dplyr                   R Documentation

_C_o_n_v_e_r_t _v_a_l_u_e_s _t_o _N_A

_D_e_s_c_r_i_p_t_i_o_n:

     This is a translation of the SQL command ‘NULLIF’. It is useful if
     you want to convert an annoying value to ‘NA’.

_U_s_a_g_e:

     na_if(x, y)
     
_A_r_g_u_m_e_n_t_s:

       x: Vector to modify

       y: Value to replace with NA

_V_a_l_u_e:

     A modified version of ‘x’ that replaces any values that are equal
     to ‘y’ with NA.

_S_e_e _A_l_s_o:

     ‘coalesce()’ to replace missing values with a specified value.

     ‘tidyr::replace_na()’ to replace ‘NA’ with a value.

     ‘recode()’ to more generally replace values.

_E_x_a_m_p_l_e_s:

     na_if(1:5, 5:1)
     
     x <- c(1, -1, 0, 10)
     100 / x
     100 / na_if(x, 0)
     
     y <- c("abc", "def", "", "ghi")
     na_if(y, "")
     
     # na_if is particularly useful inside mutate,
     # and is meant for use with vectors rather than entire data frames
     starwars %>%
       select(name, eye_color) %>%
       mutate(eye_color = na_if(eye_color, "unknown"))
     
     # na_if can also be used with scoped variants of mutate
     # like mutate_if to mutate multiple columns
     starwars %>%
       mutate_if(is.character, list(~na_if(., "unknown")))
     

