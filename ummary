group_by_all               package:dplyr               R Documentation

_G_r_o_u_p _b_y _a _s_e_l_e_c_t_i_o_n _o_f _v_a_r_i_a_b_l_e_s

_D_e_s_c_r_i_p_t_i_o_n:

     *Superseded*

     Scoped verbs (_if, _at, _all) have been superseded by the use of
     ‘across()’ in an existing verb. See ‘vignette("colwise")’ for
     details.

     These scoped variants of ‘group_by()’ group a data frame by a
     selection of variables. Like ‘group_by()’, they have optional
     mutate semantics.

_U_s_a_g_e:

     group_by_all(
       .tbl,
       .funs = list(),
       ...,
       .add = FALSE,
       .drop = group_by_drop_default(.tbl)
     )
     
     group_by_at(
       .tbl,
       .vars,
       .funs = list(),
       ...,
       .add = FALSE,
       .drop = group_by_drop_default(.tbl)
     )
     
     group_by_if(
       .tbl,
       .predicate,
       .funs = list(),
       ...,
       .add = FALSE,
       .drop = group_by_drop_default(.tbl)
     )
     
_A_r_g_u_m_e_n_t_s:

    .tbl: A ‘tbl’ object.

   .funs: A function ‘fun’, a quosure style lambda ‘~ fun(.)’ or a list
          of either form.

     ...: Additional arguments for the function calls in ‘.funs’. These
          are evaluated only once, with tidy dots support.

    .add: See ‘group_by()’

   .drop: When ‘.drop = TRUE’, empty groups are dropped. See
          ‘group_by_drop_default()’ for what the default value is for
          this argument.

   .vars: A list of columns generated by ‘vars()’, a character vector
          of column names, a numeric vector of column positions, or
          ‘NULL’.

.predicate: A predicate function to be applied to the columns or a
          logical vector. The variables for which ‘.predicate’ is or
          returns ‘TRUE’ are selected. This argument is passed to
          ‘rlang::as_function()’ and thus supports quosure-style lambda
          functions and strings representing function names.

_G_r_o_u_p_i_n_g _v_a_r_i_a_b_l_e_s:

     Existing grouping variables are maintained, even if not included
     in the selection.

_E_x_a_m_p_l_e_s:

     # Group a data frame by all variables:
     group_by_all(mtcars)
     # ->
     mtcars %>% group_by(across())
     
     # Group by variables selected with a predicate:
     group_by_if(iris, is.factor)
     # ->
     iris %>% group_by(across(where(is.factor)))
     
     # Group by variables selected by name:
     group_by_at(mtcars, vars(vs, am))
     # ->
     mtcars %>% group_by(across(c(vs, am)))
     
     # Like group_by(), the scoped variants have optional mutate
     # semantics. This provide a shortcut for group_by() + mutate():
     d <- tibble(x=c(1,1,2,2), y=c(1,2,1,2))
     group_by_all(d, as.factor)
     # ->
     d %>% group_by(across(everything(), as.factor))
     
     group_by_if(iris, is.factor, as.character)
     # ->
     iris %>% group_by(across(where(is.factor), as.character))
     

